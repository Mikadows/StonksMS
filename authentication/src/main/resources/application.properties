#Server properties
server.port=8081
server.servlet.context-path=/api/v1

#Token properties
token.secret.key=q93FnbAE2
security.token.ttl.milliseconds=3600000

#Properties based on docker
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

#Metrics related configurations
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

#Kafka configuration
#Consumer
spring.kafka.consumer.bootstrap-servers=${KAFKA_URL}
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#Producer
spring.kafka.producer.bootstrap-servers=${KAFKA_URL}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer