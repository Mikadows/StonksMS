version: "3.8"

services:
  stonksms:
    build: .
    ports:
      - 8081:8081
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/stonks
      DB_USERNAME: admin
      DB_PASSWORD: admin

  grafana:
    image: grafana/grafana
    restart: 'always'
    volumes:
      - ./volumes/grafana/lib:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./volumes/prometheus/lib:/var/lib/prometheus
      - ./volumes/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    depends_on:
      - stonksms

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    volumes:
      - ./volumes/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./volumes/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: password

  kibana:
      image: docker.elastic.co/kibana/kibana:7.12.1
      ports:
        - 5601:5601

  postgres:
    image: postgres:13.2-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
      POSTGRES_DB: stonks
    volumes:
      - ./volumes/postgres:/data
    ports:
      - 5432:5432

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - zookeeper
      - kafka

  logstash:
    image: docker.elastic.co/logstash/logstash:7.12.1
    volumes:
      - ./volumes/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./volumes/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  consul-server:
    image: consul:latest
    volumes:
     - ./volumes/consul/services:/services
    ports:
      - 8500:8500
      - 8600:8600
    command: "agent -server -bootstrap -ui -client=0.0.0.0 -config-dir /services/"
